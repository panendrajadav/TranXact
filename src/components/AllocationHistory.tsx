import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { useWallet } from \"@/contexts/WalletProvider\";\nimport { allocationService, Allocation } from \"@/lib/allocationService\";\nimport { toast } from \"@/components/ui/use-toast\";\n\nexport function AllocationHistory() {\n  const { account, isConnected } = useWallet();\n  const [allocations, setAllocations] = useState<Allocation[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchAllocations = async () => {\n    if (!isConnected || !account) return;\n    \n    setLoading(true);\n    try {\n      const userAllocations = await allocationService.getAllocationsByWallet(account);\n      setAllocations(userAllocations);\n    } catch (error) {\n      console.error('Failed to fetch allocations:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load allocation history\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllocations();\n  }, [account, isConnected]);\n\n  if (!isConnected) {\n    return (\n      <Card>\n        <CardContent className=\"p-6 text-center\">\n          <p className=\"text-muted-foreground\">Connect your wallet to view allocation history</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold\">Allocation History</h2>\n          <p className=\"text-lg text-muted-foreground\">Track your fund allocations to projects</p>\n        </div>\n        <Button onClick={fetchAllocations} disabled={loading}>\n          {loading ? \"Loading...\" : \"Refresh\"}\n        </Button>\n      </div>\n\n      {loading ? (\n        <Card>\n          <CardContent className=\"p-6 text-center\">\n            <p className=\"text-muted-foreground\">Loading allocations...</p>\n          </CardContent>\n        </Card>\n      ) : allocations.length === 0 ? (\n        <Card>\n          <CardContent className=\"p-6 text-center\">\n            <p className=\"text-muted-foreground\">No allocations found</p>\n            <p className=\"text-sm text-muted-foreground mt-2\">Start allocating funds to projects to see your history here</p>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"space-y-4\">\n          {allocations.map((allocation) => (\n            <Card key={allocation.id}>\n              <CardContent className=\"p-4\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"space-y-1\">\n                    <div className=\"font-medium\">{allocation.projectName}</div>\n                    <div className=\"text-sm text-muted-foreground\">{allocation.purpose}</div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      {new Date(allocation.createdAt).toLocaleDateString()} at {new Date(allocation.createdAt).toLocaleTimeString()}\n                    </div>\n                  </div>\n                  <div className=\"text-right space-y-2\">\n                    <div className=\"font-medium\">{allocation.amount.toFixed(2)} ALGO</div>\n                    <Badge variant={allocation.status === 'completed' ? 'default' : allocation.status === 'pending' ? 'secondary' : 'destructive'}>\n                      {allocation.status}\n                    </Badge>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"